// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String             @id @default(uuid())
  fullName String
  email String          @unique // This field is mandatory
  hashedPassword String @unique // This field is mandatory
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  classes UserClass[]
  courses UserCourse[]

  @@map("user")
}

model ClassGroup {
  id String             @id @default(uuid())
  course Course         @relation(fields:[courseName], references:[courseName])
  courseName String
  className String      @unique
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  UserClass UserClass[]

  @@map("class_group")
}

model Course {
  id String             @id @default(uuid())
  courseName String           @unique
  workload Int          
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  UserCourse UserCourse[]
  Class ClassGroup[]

  @@map("course")
}

model UserClass {
  id String             @id @default(uuid())
  student User          @relation(fields:[studentID], references:[id])
  studentID String
  class ClassGroup           @relation(fields:[classID], references:[id])
  classID String        
  assignedAt DateTime   @default(now())

  @@map("user-class")  // Used to define a name for this table
}

model UserCourse {
  id String             @id @default(uuid())
  student User          @relation(fields:[studentID], references:[id])
  studentID String
  course Course           @relation(fields:[courseID], references:[id])
  courseID String        
  assignedAt DateTime   @default(now())
  
  @@map("user-course")  // Used to define a name for this table
}


